{"version":3,"file":"static/js/959.a20f8fcb.chunk.js","mappings":"0KACA,EAAuB,qB,2BCDjBA,EAAY,aAEX,SAAeC,EAAW,GAAD,+BAkB/B,8CAlBM,WAA0BC,GAAO,8FACfC,MAAMH,EAAW,CACtCI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KACpB,KAAD,EANY,OAARO,EAAQ,gBAOKA,EAASC,OAAO,KAAD,EAAxB,GAAJJ,EAAI,QACNG,EAASE,GAAG,CAAD,yCACNL,GAAI,YAEPA,EAAK,CAAD,sBACAA,EAAK,KAAD,SAEJ,IAAIM,MAAM,wBAAwB,KAAD,wCAG5C,sB,sBCuED,MApFA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAEHE,SAAS,iCACTC,IAAI,EAAG,eACVC,MAAOJ,EAAAA,KAEJE,SAAS,mCACTE,MAAM,4BACTC,SAAUL,EAAAA,KAEPE,SAAS,0CACTC,IAAI,EAAG,6BASZ,GAMIG,EAAAA,EAAAA,IAAQ,CACVC,cAboB,CACpBN,KAAM,GACNG,MAAO,GACPC,SAAU,IAWVG,UAAUC,EAAAA,EAAAA,GAAYV,KAPtBW,EAAY,EAAZA,aACAC,EAAQ,EAARA,SAAS,EAAD,EACRC,UAAaC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aACrBC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YAMIC,EAASP,EAAY,yCAAC,WAAOQ,GAAI,sEAErB,OAFqB,SAEnCF,IAAc,SACR/B,EAAWiC,GAAM,KAAD,EACtBrB,EAAS,WAAW,gDAEpBkB,EAAS,UAAW,CAAEI,KAAM,UAAWC,QAAO,OAAI,yDAErD,mDAR0B,IAU3B,OACE,gBAAKC,UAAU,6DAA4D,UACzE,kBACEC,SAAUL,EACVI,UAAS,UAAKE,EAAW,iCAAgC,WAEzD,eAAIF,UAAU,QAAO,0BACrB,iBAAKA,UAAU,2BAA0B,WACvC,kBAAOG,QAAQ,OAAM,kBACrB,0BAAOL,KAAK,OAAOlB,KAAK,QAAWU,EAAS,UAC3CE,EAAOZ,OAAQ,cAAGoB,UAAU,aAAY,SAAER,EAAOZ,KAAKmB,cAEzD,iBAAKC,UAAU,2BAA0B,WACvC,kBAAOG,QAAQ,QAAO,oBACtB,0BAAOL,KAAK,OAAOlB,KAAK,SAAYU,EAAS,WAC5CE,EAAOT,QAAS,cAAGiB,UAAU,aAAY,SAAER,EAAOT,MAAMgB,cAE3D,iBAAKC,UAAU,2BAA0B,WACvC,kBAAOG,QAAQ,WAAU,uBACzB,0BAAOL,KAAK,WAAWlB,KAAK,YAAeU,EAAS,cACnDE,EAAOR,WACN,cAAGgB,UAAU,aAAY,SAAER,EAAOR,SAASe,aAG9CP,EAAOY,UACN,gBAAKJ,UAAU,QAAO,UACpB,cAAGA,UAAU,aAAY,SAAER,EAAOY,QAAQL,aAG9C,0BACE,mBAAQM,SAAUZ,EAAcO,UAAU,kBAAiB,+BAOrE,C","sources":["webpack://jwt/./src/pages/Signup/Signup.module.scss?1596","apis/users.js","pages/Signup/Signup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Signup_form__djdYU\"};","const API_USERS = '/api/users';\n\nexport async function createUser(newUser) {\n  const response = await fetch(API_USERS, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newUser),\n  });\n  const body = await response.json();\n  if (response.ok) {\n    return body;\n  } else {\n    if (body) {\n      throw body;\n    } else {\n      throw new Error('Error api createUser');\n    }\n  }\n}\n","import styles from './Signup.module.scss';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { createUser } from '../../apis/users';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Signup() {\n  const navigate = useNavigate();\n\n  const validationSchema = yup.object({\n    name: yup\n      .string()\n      .required('Il faut préciser votre nom')\n      .min(2, 'Un vrai nom'),\n    email: yup\n      .string()\n      .required('Il faut préciser votre email')\n      .email(\"L'email n'est pas valide\"),\n    password: yup\n      .string()\n      .required('Il faut préciser votre mot de passe')\n      .min(6, 'Mot de passe trop court'),\n  });\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const {\n    handleSubmit,\n    register,\n    formState: { errors, isSubmitting },\n    setError,\n    clearErrors,\n  } = useForm({\n    initialValues,\n    resolver: yupResolver(validationSchema),\n  });\n\n  const submit = handleSubmit(async (user) => {\n    try {\n      clearErrors();\n      await createUser(user);\n      navigate('/signin');\n    } catch (message) {\n      setError('generic', { type: 'generic', message });\n    }\n  });\n\n  return (\n    <div className=\"flex-fill d-flex align-items-center justify-content-center\">\n      <form\n        onSubmit={submit}\n        className={`${styles.form} d-flex flex-column card p-20`}\n      >\n        <h2 className=\"mb-10\">Inscription</h2>\n        <div className=\"mb-10 d-flex flex-column\">\n          <label htmlFor=\"name\">Nom</label>\n          <input type=\"text\" name=\"name\" {...register('name')} />\n          {errors.name && <p className=\"form-error\">{errors.name.message}</p>}\n        </div>\n        <div className=\"mb-10 d-flex flex-column\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"text\" name=\"email\" {...register('email')} />\n          {errors.email && <p className=\"form-error\">{errors.email.message}</p>}\n        </div>\n        <div className=\"mb-10 d-flex flex-column\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" name=\"password\" {...register('password')} />\n          {errors.password && (\n            <p className=\"form-error\">{errors.password.message}</p>\n          )}\n        </div>\n        {errors.generic && (\n          <div className=\"mb-10\">\n            <p className=\"form-error\">{errors.generic.message}</p>\n          </div>\n        )}\n        <div>\n          <button disabled={isSubmitting} className=\"btn btn-primary\">\n            Inscription\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n"],"names":["API_USERS","createUser","newUser","fetch","method","headers","body","JSON","stringify","response","json","ok","Error","navigate","useNavigate","validationSchema","yup","name","required","min","email","password","useForm","initialValues","resolver","yupResolver","handleSubmit","register","formState","errors","isSubmitting","setError","clearErrors","submit","user","type","message","className","onSubmit","styles","htmlFor","generic","disabled"],"sourceRoot":""}